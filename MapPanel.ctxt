#BlueJ class context
comment0.target=MapPanel
comment0.text=\n\ Class\ MapPanel.\ Displays\ a\ simplified\ Map\ of\ London\ \:\ the\ map\ is\ only\n\ made\ out\ of\ london\ boroughs.\ Represented\ as\ hexagons,\ it\ creates\n\ a\ clickable\ button\ that\ then\ initialises\ the\ table\ from\ TableView\ class\n\ and\ gives\ it\ parameters\ to\ launch\ the\ Table.\n\n\ @author\ Haiyun\ Zou,\ Ka\ Wang\ Sin,\ Mihail\ Bratanov\ and\ Terry\ Phung\n\ @version\ 2019.03.29\n\n\ 18-19\ 4CCS1PPA\ Programming\ Practice\ and\ Applications\n\ Term\ 2\ Coursework\ 4\ -\ London\ Property\ Marketplace\n\ Created\ by\ Haiyun\ Zou,\ Ka\ Wang\ Sin,\ Mihail\ Bratanov\ and\ Terry\ Phung\n\ Student\ ID\:\ 1828556,\ 1850162,\ 1838362,\ 1833386\n\ k-number\:\ k1895418,\ k1802265,\ k1888765,\ k1895389\n
comment1.params=lowerLimit\ upperLimit\ data\ username
comment1.target=MapPanel(int,\ int,\ java.util.ArrayList,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ the\ MapPanel\ class.\ Takes\ in\ lower\ limit\ and\ upper\ limit,\ the\ data\n\ then\ to\ filter\ the\ data.\ MapPanel\ creates\ the\ map\ of\ boroughs,\ links\ the\ data\ to\ the\ boroughs.\n\ It\ also\ tracks\ the\ number\ of\ click\ of\ boroughs\ of\ the\ user.\n
comment10.params=boroughs
comment10.target=java.util.HashMap\ setUpUserClick(java.util.ArrayList)
comment10.text=\n\ Sets\ up\ a\ HashMap\ where\ it\ stores\ the\n\ amount\ of\ times\ each\ borough\ is\ clicked\ by\ the\ user.\n\n\ Initialises\ it\ to\ 0.\n\n\ @param\ boroughs\ list\ of\ boroughs.\n\ @return\n
comment11.params=
comment11.target=void\ updateMap()
comment11.text=\n\ Updates\ the\ map\ when\ changing\ the\ value\ of\ the\ minimum\ amount\ of\ nights.\n\ Refilters\ the\ data\ and\ then\ assigns\ it\ back\ to\ the\ map\ of\ boroughs.\n
comment12.params=mouseEvent
comment12.target=void\ handle(javafx.scene.input.MouseEvent)
comment13.params=mouseEvent
comment13.target=void\ handle(javafx.scene.input.MouseEvent)
comment14.params=mouseEvent
comment14.target=void\ handle(javafx.scene.input.MouseEvent)
comment15.params=mouseEvent
comment15.target=void\ handle(javafx.scene.input.MouseEvent)
comment16.params=mouseEvent
comment16.target=void\ handle(javafx.scene.input.MouseEvent)
comment17.params=mouseEvent
comment17.target=void\ handle(javafx.scene.input.MouseEvent)
comment18.params=mouseEvent
comment18.target=void\ handle(javafx.scene.input.MouseEvent)
comment19.params=mouseEvent
comment19.target=void\ handle(javafx.scene.input.MouseEvent)
comment2.params=mouseEvent
comment2.target=void\ handle(javafx.scene.input.MouseEvent)
comment20.params=nights
comment20.target=void\ setNumberOfNights(java.lang.String)
comment20.text=\n\ Method\ that\ updates\ what\ the\ user\ selected\ for\ the\ minimum\ amount\ of\ nights.\n\n\ @param\ nights\ number\ of\ minimum\ nights\ -\ input\ from\ the\ user.\n
comment21.params=degree
comment21.target=double\ hexPointX(double)
comment21.text=\n\ Math\ method\ that\ gets\ the\ X\ coordinates\n\ for\ the\ hexagon\ drawing.\n\ @param\ degree\ degree\ of\ the\ angle\n\ @return\ x\ coordinate.\n
comment22.params=degree
comment22.target=double\ hexPointY(double)
comment22.text=\n\ Math\ method\ that\ gets\ the\ Y\ coordinates\n\ for\ the\ hexagon\ drawing.\n\n\ @param\ degree\ degree\ of\ the\ angle\n\ @return\ y\ coordinate.\n
comment23.params=lowerLimit\ upperLimit\ data
comment23.target=java.util.ArrayList\ loadData(int,\ int,\ java.util.ArrayList)
comment23.text=\n\ loads\ the\ data\ from\ the\ Airbnb\ csv\ File.\n\n\ @param\ lowerLimit\ lower\ limit\ of\ the\ price\n\ @param\ upperLimit\ upper\ limit\ of\ the\ price\n\ @param\ data\ entire\ data\ of\ airbnb\ listings.\n\ @return\ returns\ the\ data\ filtered.\n
comment24.params=nights\ data
comment24.target=java.util.ArrayList\ sortByDay(int,\ java.util.ArrayList)
comment24.text=\n\ Sorts\ all\ the\ AirBnb\ listings\ loaded\ by\n\ minimum\ amount\ of\ nights.\n\n\ @param\ nights\ minimum\ amount\ of\ nights\n\ @param\ data\ data\ of\ airbnb\ listings.\n\ @return\ ArrayList\ of\ sorted\ data\ by\ minimum\ amount\ of\ nights.\n
comment25.params=neighbourhoods
comment25.target=java.util.HashMap\ countBoroughs(java.util.ArrayList)
comment25.text=\n\ Count\ the\ amount\ of\ properties\ there\ are\ in\ each\ borough.\n\n\ @param\ neighbourhoods\ List\ of\ boroughs.\n\ @return\ a\ hashmap\ of\ count\ of\ boroughs.\n
comment26.params=
comment26.target=void\ createBoroughs()
comment26.text=\n\ Creates\ all\ the\ boroughs\ of\ type\ Borough,\n\ where\ it\ stores\ the\ name\ and\ the\ coordinate\ on\ the\ gridPane.\n
comment27.params=
comment27.target=javafx.scene.layout.Pane\ getPanel()
comment27.text=\n\ Main\ Method\ that\ returns\ the\ panel\ to\ the\ View\ class,\n\ for\ the\ map\ to\ get\ displayed.\n\n\ @return\ returns\ the\ panel.\n
comment28.params=
comment28.target=javafx.scene.control.Label\ LoadImage()
comment28.text=\n\ Loads\ the\ background\ image\ and\ returns\ it.\n\n\ @return\ returns\ the\ loaded\ image.\n
comment29.params=size
comment29.target=javafx.scene.text.Font\ getKingsFont(int)
comment29.text=\n\ Get\ the\ font\ to\ be\ used\ inside\ of\ the\ text.\n\ We\ have\ selected\ to\ use\ the\ King's\ font.\n\n\ @param\ size\ gets\ the\ size\ of\ the\ font\n\ @return\ the\ font\ with\ the\ size.\n
comment3.params=mouseEvent
comment3.target=void\ handle(javafx.scene.input.MouseEvent)
comment4.params=mouseEvent
comment4.target=void\ handle(javafx.scene.input.MouseEvent)
comment5.params=mouseEvent
comment5.target=void\ handle(javafx.scene.input.MouseEvent)
comment6.params=mouseEvent
comment6.target=void\ handle(javafx.scene.input.MouseEvent)
comment7.params=mouseEvent
comment7.target=void\ handle(javafx.scene.input.MouseEvent)
comment8.params=mouseEvent
comment8.target=void\ handle(javafx.scene.input.MouseEvent)
comment9.params=mouseEvent
comment9.target=void\ handle(javafx.scene.input.MouseEvent)
numComments=30
