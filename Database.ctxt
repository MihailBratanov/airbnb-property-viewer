#BlueJ class context
comment0.target=Database
comment0.text=\n\ Class\ database\ \:\ writer\ and\ reader\ that\ does\ database\ operations\n\ tailored\ to\ this\ program.\ Creates\ user\ profiles,\ reads\ from\ the\ profiles\n\ writes\ to\ the\ profiles\ and\ passes\ it\ on\ to\ the\ classes\ which\ needs\ it.\n\n\ @author\ Haiyun\ Zou,\ Ka\ Wang\ Sin,\ Mihail\ Bratanov\ and\ Terry\ Phung\n\ @version\ 2019.03.29\n\n\ 18-19\ 4CCS1PPA\ Programming\ Practice\ and\ Applications\n\ Term\ 2\ Coursework\ 4\ -\ London\ Property\ Marketplace\n\ Created\ by\ Haiyun\ Zou,\ Ka\ Wang\ Sin,\ Mihail\ Bratanov\ and\ Terry\ Phung\n\ Student\ ID\:\ 1828556,\ 1850162,\ 1838362,\ 1833386\n\ k-number\:\ k1895418,\ k1802265,\ k1888765,\ k1895389\n
comment1.params=
comment1.target=Database()
comment1.text=\n\ Constructor\ of\ the\ Database\ class.\n
comment2.params=name\ surname\ username\ password
comment2.target=void\ writeDetails(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\n\ Creates\ a\ new\ user,\ according\ to\ the\ details\ inputted\ by\ the\ user.\n\ @param\ name\ user's\ name\n\ @param\ surname\ user's\ surname\n\ @param\ username\ user's\ username\n\ @param\ password\ user's\ password.\n
comment3.params=entry
comment3.target=void\ writeToDatabase(java.lang.String)
comment3.text=\n\ Records,\ appends\ to\ the\ database\ \:\ writes\ to\ the\ database\ file\n\ the\ user\ login,\ password,\ surname\ and\ name.\n\ Stored\ in\ database/database.txt\n\n\ @param\ entry\n
comment4.params=name\ surname\ userName
comment4.target=void\ createUserFile(java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\n\ Creates\ a\ new\ user\ profile.\ Writes\ initial\ settings\ and\ information\ of\ the\ user.\n\ Stores\ it\ in\ users/\ [username].user\n\n\ @param\ name\n\ @param\ surname\n\ @param\ userName\n
comment5.params=
comment5.target=java.util.ArrayList\ getDatabaseEntries()
comment5.text=\n\ gets\ the\ database\ entries\ of\ each\ login\ and\ their\ respective\ password.\n\ Used\ to\ check\ if\ login\ is\ correct.\n\n\ @return\ returns\ list\ of\ users\ and\ their\ passwords\ file.\n
comment6.params=username
comment6.target=java.util.HashMap\ getUserProfile(java.lang.String)
comment6.text=\n\ returns\ userProfile.\ By\ UserProfile\ in\ this\ program\ it\ is\ meant\ the\ data\ on\n\ how\ many\ clicks\ there\ are\ on\ each\ borough\ click\ by\ the\ user\ since\ the\n\ creation\ of\ the\ user.\n\n\ @param\ username\n\ @return\ HashMap\ of\ Clicks\ per\ borough.\n
comment7.params=username\ clickCount
comment7.target=void\ writeToProfile(java.lang.String,\ java.util.HashMap)
comment7.text=\n\ Writes\ to\ the\ user\ profile\ file.\ Writes\ the\ click\ count\ of\ the\ user,\n\ according\ to\ the\ user\ from\ username.\n\n\ @param\ username\ -\ username\ of\ user\n\ @param\ clickCount\ -\ hashmap\ of\ click\ counts\ per\ borough.\n
comment8.params=username
comment8.target=java.lang.String[]\ getUserDetails(java.lang.String)
comment8.text=\n\ gets\ the\ user\ ID\ data\ \:\ surname,\ name.\n\ Identifies\ the\ user\ by\ their\ username.\n\n\ @param\ username\n\ @return\ String\ list\ of\ user\ details,\ [0]\ contains\ surname\ [1]\ contains\ name\ and\ [2]\ contains\ username\n
comment9.params=username
comment9.target=java.lang.String\ getMostClickedBorough(java.lang.String)
comment9.text=\n\ gets\ the\ most\ clicked\ borough\ from\ the\ user\ by\ their\ username.\n\ @param\ username\n\ @return\ HashMap\ of\ most\ clicked\ boroughs\n
numComments=10
